% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/PAJobResult.r
\docType{class}
\name{PAJobResult-class}
\alias{PAJobResult-class}
\alias{[,PAJobResult-method}
\alias{[[,PAJobResult-method}
\title{PAJobResult : stores a the result of a PASolve submission}
\usage{
\S4method{[}{PAJobResult}(x, i, j, drop)

\S4method{[[}{PAJobResult}(x, i, j, drop)
}
\description{
PAJobResult is a proxy object (S4 classes) which displays the current state of tasks
Methods can be called on this object to wait until results are available.

[] extract parts of PAJobResult

[[]] extract parts of PAJobResult, equivalent to []
}
\section{Methods (by generic)}{
\itemize{
\item \code{[}: 

\item \code{[[}: 
}}
\section{Slots}{

\describe{
\item{\code{job}}{an S4 object of class PAJob (internal)}

\item{\code{job.id}}{the id of the job from ProActive Scheduler point of view}

\item{\code{task.names}}{names of tasks inside this job}

\item{\code{client}}{a connection to the scheduler (internal)}

\item{\code{results}}{a java object containing the Java results (internal)}
}}
\examples{
\dontrun{
     job <- PASolve('cos', 1:4)

     # get the job id
     job@job.id

     # status of task t1
     job["t1"]

     # wait for all results
     vals <- PAWaitFor(job)

     # wait for result of task t2
     vals <- PAWaitFor(job["t2"])

     # wait for first available result
     val <- PAWaitAny(job)
 }
}

